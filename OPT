//OPT
#include<stdio.h>
void findoptimal(int pages[],int temp,int n,int current,int frames)
{
  int i,j,pos=-1,farthest=current;
  for(i=0;i<frames;i++)
  {
    for(j=current;j<n;j++) 
    {
      if(temp[j]==pages[i])
      {
          if(j>farthest)
          {
              farthest=j;
              pos=i;
          }
       break;
      } 
    }
    if(j==n)
     {
         return i; 
     }
  }
  return (pos==-1)?0:pos; 
}
void main()
{
  int i,j,n,f1,f2,faults=0,pages[20],temp[20],frames;
  printf("Enter no of pages:");
  scanf("%d",&n);
  for(i=0;i<n;i++)
  {
     scanf("%d",&pages[i]);
  }
  printf("Enter no of frames:");
  scanf("%d",&n);
  for(i=0;i<frames;i++)
  {
     temp[i]=-1;
  }
  printf("\nPage Reference String | Frames\n"); 
 for(i=0;i<n;i++)
  {
     f1=f2=0;
      for(j=0;j<frames;j++)
      {
         if(temp[j]==pages[i])
         {
             f1=f2=1; break;
         }
      }
      if(f1==0)
      {
            for(j=0;j<frames;j++)
            {
                if(temp[j]==-1)
                {
                    temp[j]=pages[i];
                    f2=1;
                    faults++;
                    break;  
                } 
            }
      }
     if(f2==0)
      {
            int pos=finOptimal(pages,temp,n,i+1,frames);
            temp[pos]=pages[i];
            faults++;           
      }
     printf("\n%2d\t\t\t",pages[i]);
     for(j=0;j<frames;j++)
     {
          if(temp[j]!=-1)
          {
             printf("%2d ",temp[j]);
          }
          else 
          {
              printf("-");
          }   
     }
   printf("total no of pages faults:%d",faults); 
  }
 
}
